/**
* gtphandler API generated from gtphandler.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* UserEquipmentBase.h
*
*
*/

#pragma once

#include "../serializer/UserEquipmentJsonObject.h"






#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Gtphandler;

class UserEquipmentBase {
 public:
  
  UserEquipmentBase(Gtphandler &parent);
  
  virtual ~UserEquipmentBase();
  virtual void update(const UserEquipmentJsonObject &conf);
  virtual UserEquipmentJsonObject toJsonObject();

  /// <summary>
  /// IP address of the User Equipment
  /// </summary>
  virtual std::string getIp() = 0;

  /// <summary>
  /// IP address of the Base Station that connects the User Equipment
  /// </summary>
  virtual std::string getTunnelEndpoint() = 0;
  virtual void setTunnelEndpoint(const std::string &value) = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Gtphandler &parent_;
};
