/**
* classifier API generated from classifier.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */


#include "TrafficClassBase.h"
#include "../Classifier.h"


TrafficClassBase::TrafficClassBase(Classifier &parent)
    : parent_(parent) {}

TrafficClassBase::~TrafficClassBase() {}

void TrafficClassBase::update(const TrafficClassJsonObject &conf) {

  if (conf.priorityIsSet()) {
    setPriority(conf.getPriority());
  }
  if (conf.directionIsSet()) {
    setDirection(conf.getDirection());
  }
  if (conf.smacIsSet()) {
    setSmac(conf.getSmac());
  }
  if (conf.dmacIsSet()) {
    setDmac(conf.getDmac());
  }
  if (conf.ethtypeIsSet()) {
    setEthtype(conf.getEthtype());
  }
  if (conf.srcipIsSet()) {
    setSrcip(conf.getSrcip());
  }
  if (conf.dstipIsSet()) {
    setDstip(conf.getDstip());
  }
  if (conf.l4protoIsSet()) {
    setL4proto(conf.getL4proto());
  }
  if (conf.sportIsSet()) {
    setSport(conf.getSport());
  }
  if (conf.dportIsSet()) {
    setDport(conf.getDport());
  }
}

TrafficClassJsonObject TrafficClassBase::toJsonObject() {
  TrafficClassJsonObject conf;

  conf.setId(getId());
  conf.setPriority(getPriority());
  conf.setDirection(getDirection());
  conf.setSmac(getSmac());
  conf.setDmac(getDmac());
  conf.setEthtype(getEthtype());
  conf.setSrcip(getSrcip());
  conf.setDstip(getDstip());
  conf.setL4proto(getL4proto());
  conf.setSport(getSport());
  conf.setDport(getDport());

  return conf;
}

std::shared_ptr<spdlog::logger> TrafficClassBase::logger() {
  return parent_.logger();
}

