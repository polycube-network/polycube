/**
* classifier API generated from classifier.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* ClassifierApiImpl.h
*
*
*/

#pragma once


#include <memory>
#include <map>
#include <mutex>
#include "../Classifier.h"

#include "ClassifierJsonObject.h"
#include "TrafficClassJsonObject.h"
#include <vector>

namespace polycube {
namespace service {
namespace api {

using namespace polycube::service::model;

namespace ClassifierApiImpl {
  void create_classifier_by_id(const std::string &name, const ClassifierJsonObject &value);
  void create_classifier_traffic_class_by_id(const std::string &name, const uint32_t &id, const TrafficClassJsonObject &value);
  void create_classifier_traffic_class_list_by_id(const std::string &name, const std::vector<TrafficClassJsonObject> &value);
  void delete_classifier_by_id(const std::string &name);
  void delete_classifier_traffic_class_by_id(const std::string &name, const uint32_t &id);
  void delete_classifier_traffic_class_list_by_id(const std::string &name);
  ClassifierJsonObject read_classifier_by_id(const std::string &name);
  std::vector<ClassifierJsonObject> read_classifier_list_by_id();
  TrafficClassJsonObject read_classifier_traffic_class_by_id(const std::string &name, const uint32_t &id);
  TrafficClassDirectionEnum read_classifier_traffic_class_direction_by_id(const std::string &name, const uint32_t &id);
  std::string read_classifier_traffic_class_dmac_by_id(const std::string &name, const uint32_t &id);
  uint16_t read_classifier_traffic_class_dport_by_id(const std::string &name, const uint32_t &id);
  std::string read_classifier_traffic_class_dstip_by_id(const std::string &name, const uint32_t &id);
  TrafficClassEthtypeEnum read_classifier_traffic_class_ethtype_by_id(const std::string &name, const uint32_t &id);
  TrafficClassL4protoEnum read_classifier_traffic_class_l4proto_by_id(const std::string &name, const uint32_t &id);
  std::vector<TrafficClassJsonObject> read_classifier_traffic_class_list_by_id(const std::string &name);
  uint32_t read_classifier_traffic_class_priority_by_id(const std::string &name, const uint32_t &id);
  std::string read_classifier_traffic_class_smac_by_id(const std::string &name, const uint32_t &id);
  uint16_t read_classifier_traffic_class_sport_by_id(const std::string &name, const uint32_t &id);
  std::string read_classifier_traffic_class_srcip_by_id(const std::string &name, const uint32_t &id);
  void replace_classifier_by_id(const std::string &name, const ClassifierJsonObject &value);
  void replace_classifier_traffic_class_by_id(const std::string &name, const uint32_t &id, const TrafficClassJsonObject &value);
  void replace_classifier_traffic_class_list_by_id(const std::string &name, const std::vector<TrafficClassJsonObject> &value);
  void update_classifier_by_id(const std::string &name, const ClassifierJsonObject &value);
  void update_classifier_list_by_id(const std::vector<ClassifierJsonObject> &value);
  void update_classifier_traffic_class_by_id(const std::string &name, const uint32_t &id, const TrafficClassJsonObject &value);
  void update_classifier_traffic_class_direction_by_id(const std::string &name, const uint32_t &id, const TrafficClassDirectionEnum &value);
  void update_classifier_traffic_class_dmac_by_id(const std::string &name, const uint32_t &id, const std::string &value);
  void update_classifier_traffic_class_dport_by_id(const std::string &name, const uint32_t &id, const uint16_t &value);
  void update_classifier_traffic_class_dstip_by_id(const std::string &name, const uint32_t &id, const std::string &value);
  void update_classifier_traffic_class_ethtype_by_id(const std::string &name, const uint32_t &id, const TrafficClassEthtypeEnum &value);
  void update_classifier_traffic_class_l4proto_by_id(const std::string &name, const uint32_t &id, const TrafficClassL4protoEnum &value);
  void update_classifier_traffic_class_list_by_id(const std::string &name, const std::vector<TrafficClassJsonObject> &value);
  void update_classifier_traffic_class_priority_by_id(const std::string &name, const uint32_t &id, const uint32_t &value);
  void update_classifier_traffic_class_smac_by_id(const std::string &name, const uint32_t &id, const std::string &value);
  void update_classifier_traffic_class_sport_by_id(const std::string &name, const uint32_t &id, const uint16_t &value);
  void update_classifier_traffic_class_srcip_by_id(const std::string &name, const uint32_t &id, const std::string &value);

  /* help related */
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_classifier_list_by_id_get_list();
  std::vector<nlohmann::fifo_map<std::string, std::string>> read_classifier_traffic_class_list_by_id_get_list(const std::string &name);

}
}
}
}

