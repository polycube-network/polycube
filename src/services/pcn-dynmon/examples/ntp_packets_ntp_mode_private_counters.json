{
    "ingress-path": {
        "name": "NTP Amplification WARNING probe",
        "code": "\r\n#include <uapi/linux/ip.h>\r\n#include <uapi/linux/udp.h>\r\n\r\n#define IP_PROTO_UDP 17\r\n#define NTP_PORT 123\r\n#define NTP_MODE_PRIVATE 7\r\n\r\n#define MODE(li_vn_mode) (uint8_t) ((li_vn_mode & 0x07) >> 0)\r\n\r\nstruct eth_hdr {\r\n    __be64 dst : 48;\r\n    __be64 src : 48;\r\n    __be16 proto;\r\n} __attribute__((packed));\r\n\r\nstruct ntp_packet {\r\n    uint8_t li_vn_mode;\r\n    uint8_t stratum;\r\n    uint8_t poll;\r\n    uint8_t precision;\r\n    uint32_t rootDelay;\r\n    uint32_t rootDispersion;\r\n    uint32_t refId;\r\n    uint32_t refTm_s;\r\n    uint32_t refTm_f;\r\n    uint32_t origTm_s;\r\n    uint32_t origTm_f;\r\n    uint32_t rxTm_s;\r\n    uint32_t rxTm_f;\r\n    uint32_t txTm_s;\r\n    uint32_t txTm_f;\r\n} __attribute__((packed));\r\n\r\nBPF_ARRAY(NTP_PACKETS_COUNTER, uint64_t, 1);\r\nBPF_ARRAY(NTP_MODE_PRIVATE_PACKETS_COUNTER, uint64_t, 1);\r\n\r\nstatic __always_inline\r\nint handle_rx(struct CTXTYPE *ctx, struct pkt_metadata *md) {\r\n    /*Parsing L2*/\r\n    void *data = (void *) (long) ctx->data;\r\n    void *data_end = (void *) (long) ctx->data_end;\r\n    struct eth_hdr *ethernet = data;\r\n    if (data + sizeof(*ethernet) > data_end)\r\n        return RX_OK;\r\n\r\n    if (ethernet->proto != bpf_htons(ETH_P_IP))\r\n        return RX_OK;\r\n\r\n    /*Parsing L3*/\r\n    struct iphdr *ip = data + sizeof(struct eth_hdr);\r\n    if (data + sizeof(struct eth_hdr) + sizeof(*ip) > data_end)\r\n        return RX_OK;\r\n    if ((int) ip->version != 4)\r\n        return RX_OK;\r\n\r\n    if (ip->protocol != IP_PROTO_UDP)\r\n        return RX_OK;\r\n\r\n    /*Parsing L4*/\r\n    uint8_t ip_header_len = 4 * ip->ihl;\r\n    struct udphdr *udp = data + sizeof(*ethernet) + ip_header_len;\r\n    if (data + sizeof(*ethernet) + ip_header_len + sizeof(*udp) > data_end)\r\n        return RX_OK;\r\n\r\n    if (udp->source == bpf_htons(NTP_PORT) || udp->dest == bpf_htons(NTP_PORT)) {\r\n        pcn_log(ctx, LOG_TRACE, \"%I:%P\\t-> %I:%P\", ip->saddr,udp->source,ip->daddr,udp->dest);\r\n        unsigned int key = 0;\r\n        uint64_t * ntp_pckts_counter = NTP_PACKETS_COUNTER.lookup(&key);\r\n        if (!ntp_pckts_counter)\r\n            pcn_log(ctx, LOG_ERR, \"[NTP_AMP_WARNING] Unable to find NTP_PACKETS_COUNTER map\");\r\n        else\r\n            *ntp_pckts_counter+=1;\r\n\r\n        /*Parsing NTP*/\r\n        struct ntp_packet *ntp = data + sizeof(*ethernet) + ip_header_len + sizeof(struct udphdr);\r\n        if (data + sizeof(*ethernet) + ip_header_len + sizeof(struct udphdr) + sizeof(*ntp) > data_end)\r\n            return RX_OK;\r\n\r\n        uint8_t mode = MODE(ntp->li_vn_mode);\r\n        pcn_log(ctx, LOG_TRACE, \"NTP mode: %hhu\", mode);\r\n        if (mode == NTP_MODE_PRIVATE) {\r\n            pcn_log(ctx, LOG_TRACE, \"RECEIVED NTP MODE 7\");\r\n            key = 0;\r\n            uint64_t * ntp_mode_private_counter = NTP_MODE_PRIVATE_PACKETS_COUNTER.lookup(&key);\r\n            if (!ntp_mode_private_counter)\r\n                pcn_log(ctx, LOG_ERR, \"[NTP_AMP_WARNING] Unable to find NTP_MODE_PRIVATE_PACKETS_COUNTER map\");\r\n            else\r\n                *ntp_mode_private_counter+=1;\r\n        }\r\n    }\r\n\r\n    return RX_OK;\r\n}",
        "metrics": [
            {
                "name": "ntp_packets_total",
                "map-name": "NTP_PACKETS_COUNTER",
                "open-metrics-metadata": {
                    "help": "This metric represents the number of NTP packets that has traveled through this probe.",
                    "type": "counter",
                    "labels": [
                        {
                            "name": "IP_PROTO",
                            "value": "UDP"
                        },
                        {
                            "name": "L4",
                            "value": "NTP"
                        }
                    ]
                }
            },
            {
                "name": "ntp_mode_private_packets_total",
                "map-name": "NTP_MODE_PRIVATE_PACKETS_COUNTER",
                "open-metrics-metadata": {
                    "help": "This metric represents the number of NTP packets with MODE = 7 (MODE_PRIVATE) that has traveled through this probe.",
                    "type": "counter",
                    "labels": [
                        {
                            "name": "IP_PROTO",
                            "value": "UDP"
                        },
                        {
                            "name": "L4",
                            "value": "NTP"
                        }
                    ]
                }
            }
        ]
    },
    "egress-path": {}
}