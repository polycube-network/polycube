/**
* monitor API generated from monitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* StatsBase.h
*
*
*/

#pragma once

#include "../serializer/StatsJsonObject.h"






#include <spdlog/spdlog.h>

using namespace polycube::service::model;

class Monitor;

class StatsBase {
 public:

  StatsBase(Monitor &parent);

  virtual ~StatsBase();
  virtual void update(const StatsJsonObject &conf);
  virtual StatsJsonObject toJsonObject();

  /// <summary>
  /// TCP attempt fails
  /// </summary>
  virtual uint64_t getTcpattemptfails() = 0;

  /// <summary>
  /// TCP sent with RST flag
  /// </summary>
  virtual uint64_t getTcpoutrsts() = 0;

  /// <summary>
  /// pkts delivered to application over total number
  /// </summary>
  virtual uint64_t getDeliverratio() = 0;

  /// <summary>
  /// pkts request to send over received pkts
  /// </summary>
  virtual uint64_t getResponseratio() = 0;

  /// <summary>
  /// last update (time from epoch in milliseconds)
  /// </summary>
  virtual uint64_t getLastupdate() = 0;

  std::shared_ptr<spdlog::logger> logger();
 protected:
  Monitor &parent_;
};
