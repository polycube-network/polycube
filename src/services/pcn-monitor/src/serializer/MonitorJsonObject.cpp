/**
* monitor API generated from monitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */



#include "MonitorJsonObject.h"
#include <regex>

namespace polycube {
namespace service {
namespace model {

MonitorJsonObject::MonitorJsonObject() {
  m_nameIsSet = false;
  m_statsIsSet = false;
}

MonitorJsonObject::MonitorJsonObject(const nlohmann::json &val) :
  JsonObjectBase(val) {
  m_nameIsSet = false;
  m_statsIsSet = false;


  if (val.count("name")) {
    setName(val.at("name").get<std::string>());
  }

  if (val.count("stats")) {
    if (!val["stats"].is_null()) {
      StatsJsonObject newItem { val["stats"] };
      setStats(newItem);
    }
  }
}

nlohmann::json MonitorJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();
  if (!getBase().is_null()) {
    val.update(getBase());
  }

  if (m_nameIsSet) {
    val["name"] = m_name;
  }

  if (m_statsIsSet) {
    val["stats"] = JsonObjectBase::toJson(m_stats);
  }

  return val;
}

std::string MonitorJsonObject::getName() const {
  return m_name;
}

void MonitorJsonObject::setName(std::string value) {
  m_name = value;
  m_nameIsSet = true;
}

bool MonitorJsonObject::nameIsSet() const {
  return m_nameIsSet;
}



StatsJsonObject MonitorJsonObject::getStats() const {
  return m_stats;
}

void MonitorJsonObject::setStats(StatsJsonObject value) {
  m_stats = value;
  m_statsIsSet = true;
}

bool MonitorJsonObject::statsIsSet() const {
  return m_statsIsSet;
}

void MonitorJsonObject::unsetStats() {
  m_statsIsSet = false;
}


}
}
}

