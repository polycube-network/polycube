/**
* monitor API generated from monitor.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* MonitorApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "monitor"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "MonitorJsonObject.h"
#include "StatsJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_monitor_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_monitor_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_stats_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_stats_deliverratio_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_stats_lastupdate_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_stats_responseratio_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_stats_tcpattemptfails_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_monitor_stats_tcpoutrsts_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_monitor_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_monitor_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_monitor_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response monitor_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

