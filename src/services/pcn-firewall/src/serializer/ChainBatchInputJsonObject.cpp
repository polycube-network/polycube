/**
* firewall API generated from firewall.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */



#include "ChainBatchInputJsonObject.h"
#include <regex>

namespace polycube {
namespace service {
namespace model {

ChainBatchInputJsonObject::ChainBatchInputJsonObject() {
  m_rulesIsSet = false;
}

ChainBatchInputJsonObject::ChainBatchInputJsonObject(const nlohmann::json &val) :
    JsonObjectBase(val) {
  m_rulesIsSet = false;


  if (val.count("rules")) {
    for (auto& item : val["rules"]) {
      ChainBatchInputRulesJsonObject newItem{ item };
      m_rules.push_back(newItem);
    }

    m_rulesIsSet = true;
  }
}

nlohmann::json ChainBatchInputJsonObject::toJson() const {
  nlohmann::json val = nlohmann::json::object();
  if (!getBase().is_null()) {
    val.update(getBase());
  }

  {
    nlohmann::json jsonArray;
    for (auto& item : m_rules) {
      jsonArray.push_back(JsonObjectBase::toJson(item));
    }

    if (jsonArray.size() > 0) {
      val["rules"] = jsonArray;
    }
  }

  return val;
}

const std::vector<ChainBatchInputRulesJsonObject>& ChainBatchInputJsonObject::getRules() const{
  return m_rules;
}

void ChainBatchInputJsonObject::addChainBatchInputRules(ChainBatchInputRulesJsonObject value) {
  m_rules.push_back(value);
  m_rulesIsSet = true;
}


bool ChainBatchInputJsonObject::rulesIsSet() const {
  return m_rulesIsSet;
}

void ChainBatchInputJsonObject::unsetRules() {
  m_rulesIsSet = false;
}


}
}
}

