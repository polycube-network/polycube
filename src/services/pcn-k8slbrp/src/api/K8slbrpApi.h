/**
* k8slbrp API generated from k8slbrp.yang
*
* NOTE: This file is auto generated by polycube-codegen
* https://github.com/polycube-network/polycube-codegen
*/


/* Do not edit this file manually */

/*
* K8slbrpApi.h
*
*/

#pragma once

#define POLYCUBE_SERVICE_NAME "k8slbrp"


#include "polycube/services/response.h"
#include "polycube/services/shared_lib_elements.h"

#include "K8slbrpJsonObject.h"
#include "PortsJsonObject.h"
#include "ServiceJsonObject.h"
#include "ServiceBackendJsonObject.h"
#include "SrcIpRewriteJsonObject.h"
#include <vector>


#ifdef __cplusplus
extern "C" {
#endif

Response create_k8slbrp_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_k8slbrp_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_k8slbrp_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_k8slbrp_service_backend_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_k8slbrp_service_backend_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_k8slbrp_service_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_k8slbrp_service_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response create_k8slbrp_src_ip_rewrite_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response delete_k8slbrp_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_k8slbrp_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_k8slbrp_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_k8slbrp_service_backend_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_k8slbrp_service_backend_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_k8slbrp_service_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_k8slbrp_service_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response delete_k8slbrp_src_ip_rewrite_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_port_mode_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_ports_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_ports_type_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_backend_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_backend_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_backend_name_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_backend_port_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_backend_weight_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_list_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_service_name_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_src_ip_rewrite_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_src_ip_rewrite_ip_range_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response read_k8slbrp_src_ip_rewrite_new_ip_range_by_id_handler(const char *name, const Key *keys, size_t num_keys);
Response replace_k8slbrp_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_k8slbrp_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_k8slbrp_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_k8slbrp_service_backend_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_k8slbrp_service_backend_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_k8slbrp_service_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_k8slbrp_service_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response replace_k8slbrp_src_ip_rewrite_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_port_mode_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_ports_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_ports_ip_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_ports_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_ports_type_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_backend_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_backend_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_backend_name_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_backend_port_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_backend_weight_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_list_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_service_name_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_src_ip_rewrite_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_src_ip_rewrite_ip_range_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);
Response update_k8slbrp_src_ip_rewrite_new_ip_range_by_id_handler(const char *name, const Key *keys, size_t num_keys, const char *value);

Response k8slbrp_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response k8slbrp_ports_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response k8slbrp_service_backend_list_by_id_help(const char *name, const Key *keys, size_t num_keys);
Response k8slbrp_service_list_by_id_help(const char *name, const Key *keys, size_t num_keys);


#ifdef __cplusplus
}
#endif

