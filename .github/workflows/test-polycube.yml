# This is a basic workflow to help you get started with Actions

name: Test Polycube

on:
  push:
    branches: [ master ]

env:
  container: polycubed

jobs:
  test-default:
    runs-on: ubuntu-latest
    #needs: [build]
    # Build strategies
    strategy:
      matrix:
        test-mode: ['CleanInstance', 'SameInstance']
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@v1

      - name: Setup VirtualEnv
        run: python3 -m pip install --user virtualenv

      - name: Docker login to Github registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
          
      - name: Set OS Env
        run: |
          echo "KILL_COMMAND=docker stop ${{ env.container }}" >>  $GITHUB_ENV
          echo "polycubed=docker run -d --name ${{ env.container }} --rm --privileged --pid=host --cap-add ALL --network host -v /proc:/host/proc -v /lib/modules:/lib/modules:ro -v /var/run/netns/:/var/run/netns:rw -v /usr/src:/usr/src:ro -v /etc/localtime:/etc/localtime:ro ghcr.io/klaalk/polycubebot/polycube-default:latest" >> $GITHUB_ENV 
      - name: Extract from Docker image
        run: | 
          sudo docker run -d --name ${{ env.container }} --rm --privileged --pid=host --cap-add ALL --network host -v /proc:/host/proc -v /lib/modules:/lib/modules:ro -v /var/run/netns/:/var/run/netns:rw -v /usr/src:/usr/src:ro -v /etc/localtime:/etc/localtime:ro ghcr.io/klaalk/polycubebot/polycube-default:latest /bin/sleep infinity
          ./CI/extract_from_docker_image.sh ${{ env.container }}
          docker stop ${{ env.container }}
      - name: Run Docker
        run: |
          sudo docker run -d --name ${{ env.container }} --rm --privileged --pid=host --cap-add ALL --network host -v /proc:/host/proc -v /lib/modules:/lib/modules:ro -v /var/run/netns/:/var/run/netns:rw -v /usr/src:/usr/src:ro -v /etc/localtime:/etc/localtime:ro ghcr.io/klaalk/polycubebot/polycube-default:latest /bin/bash -c 'polycubed -d && /bin/bash'
          docker logs -f ${{ env.container }}
          docker ps
      - name: Run Tests
        run: |
          cd tests/
          ./run-tests.sh || true
          echo "LC_ALL=C" >> $GITHUB_ENV
          python3 -m virtualenv venv -p python3
          . venv/bin/activate
          python3 -m pip install -r ./converter/requirements.txt
          echo "TEST_RESULTS=$(ls -1 test_results_*)" >> $GITHUB_ENV
          python3 ./converter/to_junit.py ${{ matrix.test-mode }}
      - name: Clean
        run: ./CI/clean_slave.sh
  
  test-iptables:
    runs-on: ubuntu-latest
    #needs: [build]
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
          persist-credentials: false
      
      - name: Setup Python
        uses: actions/setup-python@v1

      - name: Setup VirtualEnv
        run: python3 -m pip install --user virtualenv

      - name: Docker login to Github registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}

      - name: Set OS Env
        run: |
          echo "KILL_COMMAND=docker stop ${{ env.container }}" >>  $GITHUB_ENV
          echo "polycubed=docker run -d --name ${{ env.container }} --rm --privileged --pid=host --cap-add ALL --network host -v /proc:/host/proc -v /lib/modules:/lib/modules:ro -v /var/run/netns/:/var/run/netns:rw -v /usr/src:/usr/src:ro -v /etc/localtime:/etc/localtime:ro ghcr.io/klaalk/polycubebot/polycube-pcn-iptables:latest" >> $GITHUB_ENV 
      - name: Extract from Docker image
        run: | 
          sudo docker run -d --name ${{ env.container }} --rm --privileged --pid=host --cap-add ALL --network host -v /proc:/host/proc -v /lib/modules:/lib/modules:ro -v /var/run/netns/:/var/run/netns:rw -v /usr/src:/usr/src:ro -v /etc/localtime:/etc/localtime:ro ghcr.io/klaalk/polycubebot/polycube-pcn-iptables:latest /bin/sleep infinity
          ./CI/extract_from_docker_image.sh ${{ env.container }}
          docker stop ${{ env.container }}
      - name: Run Docker
        run: |
          sudo docker run -d --name ${{ env.container }} --rm --privileged --pid=host --cap-add ALL --network host -v /proc:/host/proc -v /lib/modules:/lib/modules:ro -v /var/run/netns/:/var/run/netns:rw -v /usr/src:/usr/src:ro -v /etc/localtime:/etc/localtime:ro ghcr.io/klaalk/polycubebot/polycube-pcn-iptables:latest
          docker ps
      - name: Run Tests
        run: |
          cd tests/
          ./run-tests-iptables.sh || true
          echo "LC_ALL=C" >> $GITHUB_ENV
          python3 -m virtualenv venv -p python3
          . venv/bin/activate
          python3 -m pip install -r ./converter/requirements.txt
          echo "TEST_RESULTS=$(ls -1 test_results_*)" >> $GITHUB_ENV
          python3 ./converter/to_junit.py Iptables
      - name: Clean
        run: ./CI/clean_slave.sh
